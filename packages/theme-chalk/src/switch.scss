@use './mixins/_mixin.scss' as *;
@use './mixins/_var.scss' as *;
@use 'sass:map';
@use './common/var.scss' as *;
@use './mixins/function.scss' as *;
@use './common/config.scss' as *;

$switch-height: () !default;
$switch-height: map.merge(
	(
		'large': 32px,
		'default': 28px,
		'small': 22px
	),
	$switch-height
);

$switch-handle-size: () !default;
$switch-handle-size: map.merge(
	(
		'large': 15px,
		'default': 15px,
		'small': 10px
	),
	$switch-handle-size
);

$switch-min-width: () !default;
$switch-min-width: map.merge(
	(
		'large': 80px,
		'default': 60px,
		'small': 40px
	),
	$switch-min-width
);

$switch-font-size: () !default;
$switch-font-size: map.merge(
	(
		'large': 14px,
		'default': 14px,
		'small': 12px
	),
	$switch-font-size
);

$switch-padding-horizontal: () !default;
$switch-padding-horizontal: map.merge(
	(
		'large': 10px,
		'default': 6px,
		'small': 4px
	),
	$switch-padding-horizontal
);

@include b(switch) {
	@include set-component-css-var('switch', $switch);
}

@include b(switch) {
	position: relative;
	height: map.get($switch-height, 'default');
	min-width: map.get($switch-min-width, 'default');
	vertical-align: middle;
	display: inline-flex;
	justify-content: space-between;
	align-items: center;
	box-sizing: border-box;
	border: none;
	font-size: map.get($switch-font-size, 'default');
	background-color: rgba(0, 0, 0, 0.45);
	border-radius: 50px;
	padding: 0 map.get($switch-padding-horizontal, 'default');
	transition: background-color 0.3s cubic-bezier(0.34, 0.69, 0.1, 1);
	color: getCssVar('color-white');
	cursor: pointer;

	@include b(switch-handle) {
		position: absolute;
		inset-inline-start: 4px;
		display: inline-flex;
		width: map.get($switch-handle-size, 'default');
		height: map.get($switch-handle-size, 'default');
		background-color: getCssVar('color-white');
		border-radius: 50%;
		transition: all 0.3s cubic-bezier(0.34, 0.69, 0.1, 1);
	}

	@include b(switch-inner) {
		display: inline-flex;
		justify-content: flex-end;
		align-items: center;
		padding-left: 19px;
		width: 100%;
	}

	&.is-checked {
		background-color: getCssVar('switch-on-color');

		@include b(switch-handle) {
			inset-inline-start: calc(100% - 4px - 15px);
		}

		@include b(switch-inner) {
			inset-inline-start: 4px;
			padding-right: 19px;
			padding-left: 0;
			justify-content: flex-start;
		}
	}

	&.is-disabled {
		cursor: not-allowed;
		background-color: getCssVar('color-info', 'light-8');
	}
	&.is-checked.is-disabled {
		background-color: getCssVar('color-primary', 'light-2');
	}
}

@each $size in (large, small) {
	@include b(switch-#{$size}) {
		height: map.get($switch-height, $size);
		font-size: map.get($switch-font-size, $size);
	}
}
